<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd ">
     
     
     <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.appabc.pay" />
	
	<!-- production/local development环境 -->
	<context:property-placeholder ignore-resource-not-found="true"
		location="classpath*:config-info.properties" />
	
	<import resource="classpath*:applicationContext-redis.xml"/> 	
			
 	<!-- DBCP 配置datasour数据源  -->
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	 	<property name="driverClassName" value="${jdbc.driver}"></property>
	 	<property name="url" value="${jdbc.url}"></property>
	 	<property name="username" value="${jdbc.username}"></property>
	 	<property name="password" value="${jdbc.password}"></property>
	 	<property name="maxIdle" value="${proxy.maxIdle}"></property>
	 	<property name="maxActive" value="${proxy.maxActive}"></property>
	 	<!--#给出一条简单的sql语句进行验证-->
		<property name="validationQuery" value="select now()" />
		<!--#在取出连接时进行有效验证-->
		<property name="testOnBorrow" value="true" />
		<property name="removeAbandonedTimeout" value="120" />
		<property name="removeAbandoned" value="true" />
		<!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<!-- #连接的超时时间，默认为半小时。 -->
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="defaultAutoCommit" value="true"/>  
	 </bean>
	
	<!-- 配置Jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean>
    
	<!-- 声明式事务 -->
	<aop:config proxy-target-class="true">
	    <aop:advisor pointcut="execution(* com.appabc.pay.service..*.*(..))" advice-ref="txTransactionAdvisor"/>
	</aop:config>

	 <!--配置事务处理策略 -->
	 <tx:advice id="txTransactionAdvisor" transaction-manager="transactionManager">  
	     <tx:attributes>
	     	<!-- <tx:method name="*add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
	        <tx:method name="*save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
	        <tx:method name="*insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
	        <tx:method name="*delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
	        <tx:method name="*update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	        <tx:method name="*remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	        <tx:method name="*modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/> -->
	        <!-- <tx:method name="*" read-only="true" /> -->
	        <tx:method name="*query*" read-only="true"/>
	        <tx:method name="get*" read-only="true"/>
	        <tx:method name="query*" read-only="true"/>
	        <tx:method name="find*" read-only="true"/>
	        <tx:method name="*"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	    </tx:attributes>  
	 </tx:advice>
    
    <!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- <bean id="initLoader" lazy-init="false" class="com.appabc.datas.tool.InitLoader" init-method="init"/> -->
	
</beans>